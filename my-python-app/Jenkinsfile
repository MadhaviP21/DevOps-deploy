pipeline {
    agent any
    
    stages {
    
        
        stage('CheckOut') {
            steps {
                git url: "https://github.com/Mallikarjunakadi/my-deployment.git", branch: "main"
                sh 'echo Passed'
            }
        }

        stage('Build and Push Docker Image') {
            environment {
                DOCKER_IMAGE = "mallikarjunkadi11/hello-world-app:${BUILD_NUMBER}"
                // DOCKERFILE_LOCATION = "java-maven-sonar-argocd-helm-k8s/spring-boot-app/Dockerfile"
                REGISTRY_CREDENTIALS = credentials('dockerHub')
            }
            steps {
                script {
                    sh 'cd my-python-app && docker build -t ${DOCKER_IMAGE} .'
                    def dockerImage = docker.image("${DOCKER_IMAGE}")
                    docker.withRegistry('https://index.docker.io/v1/', "dockerHub") {
                        dockerImage.push()
                    }
                }
            }
        }
        stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "my-deployment"
            GIT_USER_NAME = "Mallikarjunakadi"
        }
        steps {
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config user.email "mallikarjunkadi11@gmail.com"
                    git config user.name "Mallikarjunakadi"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" deployment-files/deployment.yml
                    git add deployment-files/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
            
        }
    }
  }



    }
}
